@model IEnumerable<Frontend_Sistema_Votaciones.Models.RolesViewModel>

@using Newtonsoft.Json;


@{
    ViewData["Title"] = "Roles";
    var abrirModal = TempData["AbrirModal"];
    string serializedItem = (string)TempData["Item"];

    RolesViewModel rol = null;
    if (!String.IsNullOrEmpty(serializedItem))
    {
        rol = JsonConvert.DeserializeObject<RolesViewModel>(serializedItem);
    }
}

<header class="w-100 d-flex justify-content-between align-items-center p-2" style="background: rgb(255,255,255); min-height: 12vh;">
    <h2>Listado de @ViewData["Title"]</h2>
    <button href="~/" class="btn btn-primary" style="max-height: 40px; max-width: 150px; min-width: 100px">
        <i class="bi bi-house-door-fill"></i>
        Inicio
    </button>
</header>
<div class="card m-2 mt-4 p-3" style="overflow-x: auto">
    <header class="d-flex justify-content-start" style="">
        <a id="btnNuevo" asp-action="Create" asp-controller="Roles" class="btn btn-outline-primary" style="max-height: 40px; max-width: 150px;" data-toggle="modal" data-target="#modal">
            <i class="bi bi-plus"></i>
            Nuevo
        </a>
    </header>
    <table id="dtRoles" class="table datatable display" style="width: 100%;">
        <thead style="color: #78e7ff;">
            <tr style="background: rgb(0,0,0)">
                <th>
                    @Html.DisplayNameFor(model => model.Rol_Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rol_Descripcion)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rol_Estado)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rol_Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rol_Descripcion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rol_Estado)
                    </td>
                    <td style="width: 5%">
                        <div class="w-100" style="max-width: 250px">
                            <div class="d-flex w-100" style="gap: 5px;">
                                <a class="btnEditar d-flex align-items-center justify-content-around btn btn-outline-warning btn-sm flex-grow-1" style="max-width: 100px" href="@Url.Action("Edit", new { Rol_Id=item.Rol_Id })">
                                    <i class="bi bi-pencil"></i>
                                    Editar
                                </a>
                                <a class="d-flex align-items-center justify-content-around btn btn-outline-secondary btn-sm flex-grow-1" style="max-width: 100px" href="@Url.Action("Details", new { Rol_Id=item.Rol_Id })">
                                    <i class="bi bi-eye"></i>
                                    Detalles
                                </a>
                                <button class="d-flex align-items-center justify-content-around btn btn-outline-danger btn-sm flex-grow-1" style="max-width: 100px" onclick="Eliminar('@item.Rol_Id')">
                                    <i class="bi bi-trash-fill"></i>
                                    Eliminar
                                </button>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    $(document).ready(function () {
        $('#dtRoles').DataTable();
    }
    @*$('#modal' + '@abrirModal').modal('show');
    @if (rol != null)
    {
        switch (abrirModal)
        {
            case "Nuevo":
                <text>
                    $('#Rol_Id_Create').val("@rol.Rol_Id");
                    $('#Rol_Descripcion_Create').val("@Html.Raw(rol.Rol_Descripcion)");
                </text>
                break;
                case "Editar":
                <text>
                    $('#Rol_Id_Edit').val("@rol.Rol_Id");
                    $('#Rol_Descripcion_Edit').val("@Html.Raw(rol.Rol_Descripcion)");
                </text>
                break;
            default:
                break;
        }
    }
})
$('#btnNuevo').click(function () {
    $('#modalNuevo').modal('show');
});
$('.btnEditar').click(function () {
    var id = $(this).data("id");
    $.ajax({
        url: `/Roles/Edit/${id}`,
        method: "GET",
        success: function (rol) {
            console.log(rol, "rol")
            $('#Rol_Id_Edit').val(rol.rol_Id);
            $('#Rol_Descripcion_Edit').val(rol.rol_Descripcion);
        },
        error: function (jqXHR, textStatus, errorThrown) {
            console.error("Error al cargar los datos del rol:", errorThrown);
        }
    });
    $('#modalEditar').modal('show');
});*@

function Eliminar(Rol_Id) {
    $("#Rol_Id_Delete").val(Rol_Id);
    localStorage.setItem("#Rol_Id_Delete", Rol_Id);
    $('#modalEliminar').modal('show');
}
</script>

<div class="modal fade" id="modalEliminar" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.Partial("_Delete", new Frontend_Sistema_Votaciones.Models.RolesViewModel())
            </div>
        </div>
    </div>
</div>
