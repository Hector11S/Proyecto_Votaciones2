@model Frontend_Sistema_Votaciones.Models.RolesViewModel
@using Newtonsoft.Json;
@{
    var Rol_Id = Model != null ? Model.Rol_Id : 0;
    var roles = ViewBag.Roles;
    var pantallas = ViewBag.Pantallas;
    var esquemas = ViewBag.Esquemas;
    var pantallasPorRoles = ViewBag.PantallasPorRoles;
    ViewData["Title"] = "Roles";
    var abrirModal = TempData["AbrirModal"];
    string serializedItem = (string)TempData["Item"];

    RolesViewModel rol = null;
    if (!String.IsNullOrEmpty(serializedItem))
    {
        rol = JsonConvert.DeserializeObject<RolesViewModel>(serializedItem);
    }
}

<header class="w-100 d-flex justify-content-between align-items-center p-2" style="background: rgb(255,255,255); min-height: 12vh;">
    <h2>Pantallas por rol</h2>
    <button href="~/" class="btn btn-primary" style="max-height: 40px; max-width: 150px; min-width: 100px">
        <i class="bi bi-house-door-fill"></i>
        Inicio
    </button>
</header>
<div class="card m-2 mt-4 p-3" style="overflow-x: auto">
    <div class="d-flex align-items-center flex-column" style="min-height: 50vh; justify-content: start;">
        <div style="min-width: 280px">
            <label style="color: #3dbdd9">Rol</label>
            <select asp-for="Rol_Id" class="form-select" style="max-width: 280px;">
                <option>--Rol--</option>
                @if (roles != null)
                {
                    foreach (var item in roles)
                    {
                        if (item.Rol_Id == Rol_Id)
                        {
                            <option value="@item.Rol_Id" selected>@item.Rol_Descripcion</option>
                        }
                        else
                        {
                            <option value="@item.Rol_Id">@item.Rol_Descripcion</option>
                        }
                    }
                }
            </select>
        </div>
        <div class="outer">
            <ul id="ul">
                <li>
                    <span class="caret"><label>Sistema electoral</label></span><input id="checkboxSistemaElectoral" type="checkbox" style="margin-left: 10px;">
                    <ul class="nested" style="border-left: 3px dashed gray; left: -26px; position: relative; top: -6px; padding-left: 0; margin-left: 32px; ">
                        @if (esquemas != null && pantallas != null)
                        {
                            foreach (var esquema in esquemas)
                            {
                                <li style="position: relative; min-height: 30px;background: #fff; border-bottom: 3px dashed gray;">
                                    <div style=" position: absolute; top: 50%; min-width: 100%; z-index: 1; background: #fff; left: 15px;">
                                        <span class="caret"><label>@esquema</label></span><input id="@esquema" type="checkbox" style="margin-left: 10px;">
                                        <ul class="nested" style="left: -26px; position: relative; top: -6px; border-left: 3px dashed gray; padding-left: 0; margin-left: 32px;">
                                            @foreach (var pantalla in pantallas)
                                            {
                                                if (pantalla.Pant_Esquema == esquema)
                                                {
                                                    <li style="position: relative; min-height: 30px;background: #fff; border-bottom: 3px dashed gray;">
                                                        <div style=" position: absolute; top: 50%; min-width: 300px; z-index: 1; background: #fff; left: 15px;">
                                                            <input id="@pantalla.Pant_Id" type="checkbox" />
                                                            <label for="@pantalla.Pant_Id">@pantalla.Pant_Descripcion</label>
                                                        </div>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </li>
                            }
                        }
                    </ul>
                </li>
            </ul>
        </div>
        @*<div id="ParoTreeView">
            <ul>
                <li id="Pantallas" data-jstree='{"opened":true,"icon":"/lib/jstree/window-fullscreen.svg"}'>
                    <span>Pantallas</span>
                    <ul>
                        @if (esquemas != null && pantallas != null)
                        {
                            foreach (var esquema in esquemas)
                            {
                                <li id="@esquema" data-jstree='{"icon":"/lib/jstree/card-list.svg"}'>
                                    <label>@esquema</label>
                                    <ul>
                                        @foreach (var pantalla in pantallas)
                                        {
                                            if (pantalla.Pant_Esquema == esquema)
                                            {
                                                <li id="@pantalla.Pant_Id" data-jstree='{"icon":"/lib/jstree/circle.svg"}'>@pantalla.Pant_Descripcion</li>
                                            }
                                        }
                                    </ul>
                                </li>
                            }
                        }
                    </ul>
                </li>
            </ul>
        </div>*@
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    var toggler = document.getElementsByClassName("caret");
    var i;

    for (i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener("click", function () {
            this.parentElement.querySelector(".nested").classList.toggle("active");
            this.classList.toggle("caret-down");
            const ulNested = this.parentElement.querySelector(".nested");
            const { height } = ulNested.getBoundingClientRect();
            console.log(ulNested, 'ulNested');
            ulNested.closest("li").style.marginBottom = `${height}px`;
        });
    }

    const pantallasPorRolesJSON = JSON.parse('@Html.Raw(pantallasPorRoles)');
    console.log(pantallasPorRolesJSON);

    let dropdownChangedByUser = true;
    //$('#ParoTreeView').jstree({
    //    "core": {
    //        "themes": {
    //            "variant": "large"
    //        }
    //    },
    //    "checkbox": {
    //        "keep_selected_style": false
    //    },
    //    "plugins": ["checkbox"]
    //}).on('changed.jstree', function (e, data) {
    //    if (dropdownChangedByUser) {
    //        dropdownChangedByUser = false;
    //        return;
    //    }
    //    console.log(data.node.id, "data.node.id")
    //    if (/^\d+$/.test(ddlRoles.value)) {
    //        if (/^\d+$/.test(data.node.id)) {
    //            let method = "DELETE";
    //            if (data.action === "select_node") {
    //                method = "GET";
    //            }
    //            $.ajax({
    //                url: `/Roles/${method === "GET" ? "Create" : "Delete"}PantallasPorRoles?Rol_Id=${ddlRoles.value}&Pant_Id=${data.node.id}`,
    //                method,
    //                success: function (response) {
    //                    console.log(response, "PantallasPorRoles/Create");
    //                    if (response.result === true) {
    //                        iziToast.success({
    //                            title: 'Exito',
    //                            message: response.message,
    //                            position: 'topRight',
    //                            transitionIn: 'flipInX',
    //                            transitionOut: 'flipOutX'
    //                        });
    //                    } else {
    //                        iziToast.error({
    //                            title: 'Error',
    //                            message: response.message,
    //                            position: 'topRight',
    //                            transitionIn: 'flipInX',
    //                            transitionOut: 'flipOutX'
    //                        });
    //                    }
    //                },
    //                error: function (jqXHR, textStatus, errorThrown) {
    //                    console.error(`Error al asignar las pantallas al rol`, errorThrown);
    //                }
    //            });
    //        } else {
    //            alert("AAAAAAAAA");
    //        }
    //    } else {
    //        var selectedNodes = data.selected;

    //        $.each(selectedNodes, function (index, nodeId) {
    //            $('#ParoTreeView').jstree('uncheck_node', nodeId);
    //        });
    //        if (data.action === "select_node") {
    //            iziToast.warning({
    //                title: 'Seleccione un rol',
    //                message: "Por favor seleccione un rol",
    //                position: 'topRight',
    //                transitionIn: 'flipInX',
    //                transitionOut: 'flipOutX'
    //            });
    //        }
    //    }
    //})
    const ddlRoles = document.getElementById("Rol_Id");
    ddlRoles.addEventListener("change", () => {
        dropdownChangedByUser = true;
        const pantallasToCheck = pantallasPorRolesJSON.filter(item => item.Rol_Id === parseInt(ddlRoles.value));
        console.log(pantallasToCheck);
        pantallasToCheck.forEach(pantalla => {
            const nodeId = pantalla.Pant_Id.toString();
            $('#ParoTreeView').jstree('check_node', nodeId);
        });
    });

</script>