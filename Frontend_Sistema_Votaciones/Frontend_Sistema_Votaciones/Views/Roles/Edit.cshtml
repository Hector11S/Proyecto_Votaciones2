@model Frontend_Sistema_Votaciones.Models.RolesViewModel
@using Newtonsoft.Json;
@{
    var Rol_Id = Model != null ? Model.Rol_Id : 0;
    var Rol_Descripcion = Model != null ? Model.Rol_Descripcion : null;
    var roles = ViewBag.Roles;
    var pantallas = ViewBag.Pantallas;
    var esquemas = (Dictionary<int, string>)ViewBag.Esquemas;
    var pantallasPorRoles = ViewBag.PantallasPorRoles;
    ViewData["Title"] = "Roles";
    var abrirModal = TempData["AbrirModal"];
    string serializedItem = (string)TempData["Item"];

    RolesViewModel rol = null;
    if (!String.IsNullOrEmpty(serializedItem))
    {
        rol = JsonConvert.DeserializeObject<RolesViewModel>(serializedItem);
    }
}

<header class="w-100 d-flex justify-content-between align-items-center p-2" style="background: rgb(255,255,255); min-height: 12vh;">
    <h2>Pantallas por rol</h2>
    <button href="~/" class="btn btn-primary" style="max-height: 40px; max-width: 150px; min-width: 100px">
        <i class="bi bi-house-door-fill"></i>
        Inicio
    </button>
</header>
<div class="card m-2 mt-4 p-3" style="overflow-x: auto">
    <div class="d-flex align-items-center flex-column" style="min-height: 50vh; justify-content: start;">
        <form asp-action="Edit" asp-controller="Roles" method="post">
            <div style="min-width: 280px; display: flex; gap: 20px;">
                @if (Rol_Id != 0)
                {
                    <div>
                        <label style="color: #3dbdd9">Rol</label>
                        <input asp-for="Rol_Id" type="hidden" value="@Rol_Id" style="max-width: 280px;" />
                        <input asp-for="Rol_Descripcion" value="@Rol_Descripcion" class="form-control" style="max-width: 280px;" />
                    </div>
                    <button id="btnRol_Id" class="btn btn-primary" style=" max-height: 40px; align-self: end;" type="submit">Guardar</button>
                }
                else
                {
                    <div>
                        <label style="color: #3dbdd9">Rol</label>
                        <input asp-for="Rol_Id" type="hidden" value="@Rol_Id" style="max-width: 280px;" />
                        <input asp-for="Rol_Descripcion" class="form-control" style="max-width: 280px;" disabled/>
                    </div>
                    <button id="btnRol_Id" class="btn btn-primary" style=" max-height: 40px; align-self: end;" type="submit" disabled>Guardar</button>
                }
            </div>
        </form>
        <div class="outer">
            <ul id="ul">
                <li>
                    <span class="caret">
                        <label>Sistema electoral</label>
                    </span>
                    @if (Rol_Id != 0)
                    {
                        <input id="checkboxSistemaElectoral" type="checkbox" style="margin-left: 10px;">
                    }
                    else
                    {
                        <input id="checkboxSistemaElectoral" type="checkbox" style="margin-left: 10px;" disabled/>
                    }
                    <ul class="nested" style="border-left: 3px dashed gray; left: -26px; position: relative; top: -6px; padding-left: 0; margin-left: 32px; ">
                        @if (esquemas != null && pantallas != null)
                        {
                            foreach (var esquema in esquemas)
                            {
                                <li style="position: relative; min-height: 30px;background: #fff; border-bottom: 3px dashed gray;">
                                    <div style=" position: absolute; top: 50%; min-width: 100%; z-index: 1; background: #fff; left: 15px;">
                                        <span class="caret">
                                            <label>@esquema.Value</label>
                                        </span>
                                        @if (Rol_Id != 0)
                                        {
                                            <input id="@esquema.Key" class="Esqu_CkBox" type="checkbox" style="margin-left: 10px;">
                                        }
                                        else
                                        {
                                            <input id="@esquema.Key" class="Esqu_CkBox" type="checkbox" style="margin-left: 10px;" disabled>
                                        }
                                        <ul class="nested" style="left: -26px; position: relative; top: -6px; border-left: 3px dashed gray; padding-left: 0; margin-left: 32px;">
                                            @foreach (var pantalla in pantallas)
                                            {
                                                if (pantalla.Esqu_Id == esquema.Key)
                                                {
                                                    <li style="position: relative; min-height: 30px;background: #fff; border-bottom: 3px dashed gray;">
                                                        <div style=" position: absolute; top: 50%; min-width: 300px; z-index: 1; background: #fff; left: 15px;">
                                                            @if (Rol_Id != 0)
                                                            {
                                                                <input id="@pantalla.Pant_Id" type="checkbox" class="Pant_CkBox" />
                                                            }
                                                            else
                                                            {
                                                                <input id="@pantalla.Pant_Id" type="checkbox" class="Pant_CkBox" disabled />
                                                            }
                                                            <label for="@pantalla.Pant_Id">@pantalla.Pant_Descripcion</label>
                                                        </div>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </li>
                            }
                        }
                    </ul>
                </li>
            </ul>
        </div>
</div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    var toggler = document.getElementsByClassName("caret");
    var i;

    for (i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener("click", function () {
            this.parentElement.querySelector(".nested").classList.toggle("active");
            this.classList.toggle("caret-down");
            const ulNested = this.parentElement.querySelector(".nested");
            const { height } = ulNested.getBoundingClientRect();
            console.log(ulNested, 'ulNested');
            ulNested.closest("li").style.marginBottom = `${height}px`;
        });
    }

    const pantallasPorRolesJSON = JSON.parse('@Html.Raw(pantallasPorRoles)');
    console.log(pantallasPorRolesJSON);

    let dropdownChangedByUser = true;

    const rolId = document.getElementById("Rol_Id").value;
    console.log(rolId, "rolId")
    $(document).ready(function () {
        $('.Pant_CkBox').change(function () {
            if (parseInt(rolId) !== 0) {
                var isChecked = $(this).is(':checked');
                var method = isChecked ? 'GET' : 'DELETE';
                var pantId = $(this).attr('id');

                $.ajax({
                    url: `/Roles/${method === "GET" ? "Create" : "Delete"}PantallasPorRoles?Rol_Id=${ddlRoles.value}&Pant_Id=${pantId}`,
                    method: method,
                    success: function (response) {
                        console.log(response, "response pantallas por roles AJAX");
                        if (response.result === true) {
                            iziToast.success({
                                title: 'Exito',
                                message: response.message,
                                position: 'topRight',
                                transitionIn: 'flipInX',
                                transitionOut: 'flipOutX'
                            });
                        } else {
                            iziToast.error({
                                title: 'Error',
                                message: response.message,
                                position: 'topRight',
                                transitionIn: 'flipInX',
                                transitionOut: 'flipOutX'
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error(`Error al asignar las pantallas al rol`, errorThrown);
                    }
                });
            } else {
                iziToast.warning({
                    title: 'Error',
                    message: "No hay un rol al cual vincular las pantallas",
                    position: 'topRight',
                    transitionIn: 'flipInX',
                    transitionOut: 'flipOutX'
                });
            }
        });
        $('.Esqu_CkBox').change(function () {
            if (parseInt(rolId) !== 0) {
                var isChecked = $(this).is(':checked');
                var method = isChecked ? 'GET' : 'DELETE';
                var esquId = $(this).attr('id');

                $.ajax({
                    url: `/Roles/${method === "GET" ? "Create" : "Delete"}EsquemaPorRoles?Rol_Id=${ddlRoles.value}&Esqu_Id=${esquId}`,
                    method: method,
                    success: function (response) {
                        console.log(response, "response esquema por roles AJAX");
                        if (response.result === true) {
                            iziToast.success({
                                title: 'Exito',
                                message: response.message,
                                position: 'topRight',
                                transitionIn: 'flipInX',
                                transitionOut: 'flipOutX'
                            });
                        } else {
                            iziToast.error({
                                title: 'Error',
                                message: response.message,
                                position: 'topRight',
                                transitionIn: 'flipInX',
                                transitionOut: 'flipOutX'
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error(`Error al asignar las pantallas al rol`, errorThrown);
                    }
                });
            } else {
                iziToast.warning({
                    title: 'Error',
                    message: "No hay un rol al cual vincular las pantallas",
                    position: 'topRight',
                    transitionIn: 'flipInX',
                    transitionOut: 'flipOutX'
                });
            }
        })
    });

    const ddlRoles = document.getElementById("Rol_Id");
    ddlRoles.addEventListener("change", () => {
        dropdownChangedByUser = true;
        const pantallasToCheck = pantallasPorRolesJSON.filter(item => item.Rol_Id === parseInt(ddlRoles.value));
        console.log(pantallasToCheck);
        pantallasToCheck.forEach(pantalla => {
            const nodeId = pantalla.Pant_Id.toString();
            $('#ParoTreeView').jstree('check_node', nodeId);
        });
    });

</script>